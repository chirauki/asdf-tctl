--- bin/install.orig
+++ bin/install
@@ -4,64 +4,64 @@
 set -o pipefail
 
 ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
-[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
-[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)
+[ -n "$ASDF_INSTALL_VERSION" ] || (echo >&2 'Missing ASDF_INSTALL_VERSION' && exit 1)
+[ -n "$ASDF_INSTALL_PATH" ] || (echo >&2 'Missing ASDF_INSTALL_PATH' && exit 1)
 
 install_tctl() {
-    local version=$2
-    local install_path=$3
-    local bin_install_path="$install_path/bin"
-    local bin_path="${bin_install_path}/tctl"
+	local version=$2
+	local install_path=$3
+	local bin_install_path="$install_path/bin"
+	local bin_path="${bin_install_path}/tctl"
 
-    if [ "$version" == "dev" ]; then
-        [ -n "$ASDF_TCTL_DEV_PATH" ] ||  (>&2 echo 'Missing ASDF_TCTL_DEV_PATH' && exit 1)
-        mkdir -p "$bin_install_path"
-        if [ -L "$bin_path" ]; then
-            unlink "$bin_path"
-        fi
-        ln -s "${ASDF_TCTL_DEV_PATH}" "$bin_path"
-    else
-        local download_url
-        download_url="$(get_download_url "$version")"
+	if [ "$version" == "dev" ]; then
+		[ -n "$ASDF_TCTL_DEV_PATH" ] || (echo >&2 'Missing ASDF_TCTL_DEV_PATH' && exit 1)
+		mkdir -p "$bin_install_path"
+		if [ -L "$bin_path" ]; then
+			unlink "$bin_path"
+		fi
+		ln -s "${ASDF_TCTL_DEV_PATH}" "$bin_path"
+	else
+		local download_url
+		download_url="$(get_download_url "$version")"
 
-        mkdir -p "${bin_install_path}"
+		mkdir -p "${bin_install_path}"
 
-        echo "Downloading tctl from ${download_url}"
-        if curl -L -sf "$download_url" -o "$bin_path"; then
-            chmod +x "$bin_path"
-        else
-            echo "Failed to download tctl from ${download_url}. Does the version exist and is available in the requested $(get_cpu) architecture?"
-            exit 1
-        fi
-    fi
+		echo "Downloading tctl from ${download_url}"
+		if curl -L -sf "$download_url" -o "$bin_path"; then
+			chmod +x "$bin_path"
+		else
+			echo "Failed to download tctl from ${download_url}. Does the version exist and is available in the requested $(get_cpu) architecture?"
+			exit 1
+		fi
+	fi
 }
 
 get_arch() {
-  uname | tr '[:upper:]' '[:lower:]'
+	uname | tr '[:upper:]' '[:lower:]'
 }
 
 get_cpu() {
-  local machine_hardware_name
-  machine_hardware_name=${ASDF_TCTL_OVERWRITE_ARCH:-"$(uname -m)"}
+	local machine_hardware_name
+	machine_hardware_name=${ASDF_TCTL_OVERWRITE_ARCH:-"$(uname -m)"}
 
-  case "$machine_hardware_name" in
-    'x86_64') local cpu_type="amd64";;
-    'powerpc64le' | 'ppc64le') local cpu_type="ppc64le";;    
-    'aarch64') local cpu_type="arm64";;
-    'armv7l') local cpu_type="arm";;
-    *) local cpu_type="$machine_hardware_name";;
-  esac
+	case "$machine_hardware_name" in
+	'x86_64') local cpu_type="amd64" ;;
+	'powerpc64le' | 'ppc64le') local cpu_type="ppc64le" ;;
+	'aarch64') local cpu_type="arm64" ;;
+	'armv7l') local cpu_type="arm" ;;
+	*) local cpu_type="$machine_hardware_name" ;;
+	esac
 
-  echo "$cpu_type"
+	echo "$cpu_type"
 }
 
 get_download_url() {
-  local version="$1"
-  local platform
-  local cpu
-  platform="$(get_arch)"
-  cpu="$(get_cpu)"
-  echo "https://binaries.dl.tetrate.io/public/raw/versions/${platform}-${cpu}-${version}/tctl"
+	local version="$1"
+	local platform
+	local cpu
+	platform="$(get_arch)"
+	cpu="$(get_cpu)"
+	echo "https://binaries.dl.tetrate.io/public/raw/versions/${platform}-${cpu}-${version}/tctl"
 }
 
 install_tctl "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
--- bin/list-all-funcs.orig
+++ bin/list-all-funcs
@@ -2,17 +2,17 @@
 
 # stolen from https://github.com/rbenv/ruby-build/pull/631/files#diff-fdcfb8a18714b33b07529b7d02b54f1dR942
 function sort_versions() {
-  sed 'h; s/[+-]/./g; s/.p\([[:digit:]]\)/.z\1/; s/$/.z/; G; s/\n/ /' | \
-    LC_ALL=C sort -t. -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n | awk '{print $2}'
+	sed 'h; s/[+-]/./g; s/.p\([[:digit:]]\)/.z\1/; s/$/.z/; G; s/\n/ /' |
+		LC_ALL=C sort -t. -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n | awk '{print $2}'
 }
 
 list_all_versions() {
-    curl -sk https://binaries.dl.tetrate.io/public/raw/ | \
-    grep -io '<a href=['"'"'"][^"'"'"']*['"'"'"]' | \
-    sed -e 's/^<a href=["'"'"']//i' -e 's/["'"'"']$//i' | \
-    grep -v ".asc" | \
-    grep linux-amd64 | \
-    cut -d'/' -f7 | \
-    sed "s/linux-amd64-//g" | \
-    grep -E "[0-9]\.[0-9]\.[0-9]"
+	curl -sk https://binaries.dl.tetrate.io/public/raw/ |
+		grep -io '<a href=['"'"'"][^"'"'"']*['"'"'"]' |
+		sed -e 's/^<a href=["'"'"']//i' -e 's/["'"'"']$//i' |
+		grep -v ".asc" |
+		grep linux-amd64 |
+		cut -d'/' -f7 |
+		sed "s/linux-amd64-//g" |
+		grep -E "[0-9]\.[0-9]\.[0-9]"
 }
